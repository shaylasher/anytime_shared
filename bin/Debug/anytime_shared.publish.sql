/*
Deployment script for anytime_data_local

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "anytime_data_local"
:setvar DefaultFilePrefix "anytime_data_local"
:setvar DefaultDataPath "C:\Users\tanss\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\tanss\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, OPERATION_MODE = READ_WRITE, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[customers]...';


GO
CREATE TABLE [dbo].[customers] (
    [id]                   INT            NOT NULL,
    [short_name]           NVARCHAR (5)   NULL,
    [expedite]             NVARCHAR (1)   NULL,
    [qa]                   NVARCHAR (25)  NULL,
    [qa_cost]              MONEY          NULL,
    [is_sent]              BIT            NULL,
    [is_received]          BIT            NULL,
    [is_delivered]         BIT            NULL,
    [billed]               MONEY          NULL,
    [is_paid]              BIT            NULL,
    [is_binder_purchased]  BIT            NULL,
    [is_ship_normal]       BIT            NULL,
    [is_ship_overnight]    BIT            NULL,
    [mail_cost]            MONEY          NULL,
    [binder_cost]          MONEY          NULL,
    [is_binder_sent]       BIT            NULL,
    [cost]                 MONEY          NULL,
    [profit]               MONEY          NULL,
    [version]              NVARCHAR (20)  NULL,
    [update_date]          DATETIME       NULL,
    [first_output_date]    DATETIME       NULL,
    [airline_notes]        NVARCHAR (MAX) NULL,
    [scan_rep]             NVARCHAR (25)  NULL,
    [is_birdeye_sent]      BIT            NULL,
    [full_name]            NVARCHAR (100) NULL,
    [first_name]           NVARCHAR (25)  NULL,
    [middle_name]          NVARCHAR (25)  NULL,
    [last_name]            NVARCHAR (25)  NULL,
    [callsign]             NVARCHAR (25)  NULL,
    [notes]                NVARCHAR (MAX) NULL,
    [email]                NVARCHAR (100) NULL,
    [interview_date]       DATETIME       NULL,
    [interview_airline]    NVARCHAR (25)  NULL,
    [phone]                NVARCHAR (20)  NULL,
    [Address]              NVARCHAR (100) NULL,
    [Address2]             NVARCHAR (100) NULL,
    [City]                 NVARCHAR (50)  NULL,
    [State]                NVARCHAR (20)  NULL,
    [Zip]                  NVARCHAR (20)  NULL,
    [country]              NVARCHAR (50)  NULL,
    [is_military]          BIT            NULL,
    [branch]               NVARCHAR (100) NULL,
    [is_harrier]           BIT            NULL,
    [is_osprey]            BIT            NULL,
    [is_ip]                BIT            NULL,
    [is_commercial]        BIT            NULL,
    [is_121]               BIT            NULL,
    [flies_for]            NVARCHAR (100) NULL,
    [is_corporate]         BIT            NULL,
    [is_contractor]        BIT            NULL,
    [flies_for_contractor] NVARCHAR (100) NULL,
    [is_ga]                BIT            NULL,
    [is_faa_cert]          BIT            NULL,
    [winging_date]         DATE           NULL,
    [ifr_date]             DATE           NULL,
    [pic_date]             DATE           NULL,
    [solo_date]            DATE           NULL,
    [ppl_date]             DATE           NULL,
    [commercial_date]      DATE           NULL,
    [atp_date]             DATE           NULL,
    [cfi_date]             DATE           NULL,
    [cfii_date]            DATE           NULL,
    [mei_date]             DATE           NULL,
    [meii_date]            DATE           NULL,
    [register_date]        DATE           NULL,
    [referred]             NVARCHAR (100) NULL,
    [logbook_type]         NVARCHAR (MAX) NULL,
    [is_ratp]              BIT            NULL,
    [is_helo]              BIT            NULL,
    [is_navy_log]          BIT            NULL,
    [is_usaf_log]          BIT            NULL,
    [is_civ_log]           BIT            NULL,
    [cost_per_line]        MONEY          NULL,
    [process]              NVARCHAR (50)  NULL,
    [POC]                  NVARCHAR (50)  NULL,
    [navy_pages]           INT            NULL,
    [navy_records]         INT            NULL,
    [ga_pages]             INT            NULL,
    [ga_records]           INT            NULL,
    [ga_large_pages]       INT            NULL,
    [ga_large_records]     INT            NULL,
    [usaf_pages]           INT            NULL,
    [usaf_records]         INT            NULL,
    [sent_date]            DATETIME       NULL,
    [received_date]        DATETIME       NULL,
    [due_date]             DATETIME       NULL,
    [completion_days]      FLOAT (53)     NULL,
    [process_cost]         MONEY          NULL,
    [scans_received_date]  DATETIME       NULL,
    [meta_update]          DATETIME2 (7)  NULL,
    CONSTRAINT [PK__customer__3213E83FA831258C] PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
ALTER TABLE [dbo].[customers] ENABLE CHANGE_TRACKING WITH (TRACK_COLUMNS_UPDATED = ON);


GO
PRINT N'Creating Table [dbo].[customers_interviews]...';


GO
CREATE TABLE [dbo].[customers_interviews] (
    [id]                INT            IDENTITY (1, 1) NOT NULL,
    [client_id]         INT            NULL,
    [interview_date]    DATETIME       NULL,
    [interview_airline] NVARCHAR (255) NULL,
    [meta_update]       DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
ALTER TABLE [dbo].[customers_interviews] ENABLE CHANGE_TRACKING WITH (TRACK_COLUMNS_UPDATED = ON);


GO
PRINT N'Creating Table [dbo].[customers_invoices]...';


GO
CREATE TABLE [dbo].[customers_invoices] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [client_id]   INT            NOT NULL,
    [description] NVARCHAR (200) NOT NULL,
    [unit_price]  MONEY          NOT NULL,
    [quantity]    INT            NOT NULL,
    [meta_update] DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[customers_ip_tours]...';


GO
CREATE TABLE [dbo].[customers_ip_tours] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [client_id]   INT            NULL,
    [ac]          NVARCHAR (255) NULL,
    [start_date]  DATETIME       NULL,
    [end_date]    DATETIME       NULL,
    [meta_update] DATETIME2 (3)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[customers_pages]...';


GO
CREATE TABLE [dbo].[customers_pages] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [client_id]   INT            NULL,
    [form_type]   NVARCHAR (255) NULL,
    [pages]       INT            NULL,
    [records]     INT            NULL,
    [meta_update] DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[sync_metadata]...';


GO
CREATE TABLE [dbo].[sync_metadata] (
    [change_version]  INT           NOT NULL,
    [change_datetime] DATETIME2 (3) NOT NULL,
    PRIMARY KEY CLUSTERED ([change_version] ASC)
);


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_is_navy_log]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_is_navy_log] DEFAULT ((0)) FOR [is_navy_log];


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_is_usaf_log]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_is_usaf_log] DEFAULT ((0)) FOR [is_usaf_log];


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_is_civ_log]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_is_civ_log] DEFAULT ((0)) FOR [is_civ_log];


GO
PRINT N'Creating Default Constraint [dbo].[DF_customers_meta_update]...';


GO
ALTER TABLE [dbo].[customers]
    ADD CONSTRAINT [DF_customers_meta_update] DEFAULT (sysdatetime()) FOR [meta_update];


GO
PRINT N'Creating Trigger [dbo].[tr_customers_update_meta]...';


GO
CREATE TRIGGER tr_customers_update_meta
ON customers
AFTER UPDATE
AS
BEGIN
    SET NOCOUNT ON;
    
    UPDATE customers
    SET meta_update = GETDATE()
    FROM customers c
    INNER JOIN inserted i ON c.id = i.id;
END;
GO
PRINT N'Creating Trigger [dbo].[trg_customers_interviews]...';


GO
CREATE TRIGGER dbo.trg_customers_interviews
ON dbo.customers_interviews
AFTER UPDATE
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE t
    SET meta_update = GETDATE()
    FROM dbo.customers_interviews t
    INNER JOIN inserted i ON t.ID = i.ID; -- Replace ID with the primary key column
END;
GO
PRINT N'Creating Procedure [dbo].[spCustomers_Delete]...';


GO
CREATE PROCEDURE [dbo].[spCustomers_Delete]
	@Id int
AS
begin
	delete 
	from dbo.[customers]
	where Id = @Id;
end
/* dont typically delete records, a better method would be to set a flag to indicate the record is no longer active, but this is a simple example of a delete procedure. */
GO
PRINT N'Creating Procedure [dbo].[spCustomers_Get]...';


GO
CREATE PROCEDURE [dbo].[spCustomers_Get]
	@Id int
AS
begin
	select *
	from dbo.[customers]
	where Id = @Id;
end
GO
PRINT N'Creating Procedure [dbo].[spCustomers_GetAll]...';


GO
CREATE PROCEDURE [dbo].[spCustomers_GetAll]
AS
begin
	select *
	from dbo.[customers];
end
GO
PRINT N'Creating Procedure [dbo].[spCustomers_Insert]...';


GO
CREATE PROCEDURE [dbo].[spCustomers_Insert]
	@id INT, 
    @short_name NVARCHAR(5), 
    @expedite NVARCHAR(1), 
    @qa NVARCHAR(25), 
    @qa_cost MONEY, 
    @is_sent BIT, 
    @is_recieved BIT, 
    @is_delivered BIT, 
    @billed MONEY, 
    @is_paid BIT, 
    @is_binder_purchased BIT, 
    @is_ship_normal BIT, 
    @is_ship_overnight BIT, 
    @mail_cost MONEY, 
    @binder_cost MONEY, 
    @is_binder_sent BIT, 
    @cost MONEY, 
    @profit MONEY, 
    @version NVARCHAR(20), 
    @update_date DATETIME, 
    @first_output_date DATETIME,
    @airline_notes NVARCHAR(MAX),
    @scan_rep NVARCHAR(25),
    @is_birdeye_sent BIT,
    @full_name NVARCHAR(100),
    @first_name NVARCHAR(25),
    @middle_name NVARCHAR(25),
    @last_name NVARCHAR(25),
    @call_sign NVARCHAR(25),
    @notes NVARCHAR(MAX),
    @email NVARCHAR(100),
    @interview_date DATETIME,
    @interview_airline NVARCHAR(25),
    @phone NVARCHAR(20),
    @Address NVARCHAR(100),
    @Address2 NVARCHAR(100),
    @City NVARCHAR(50),
    @State NVARCHAR(20),
    @Zip NVARCHAR(20),
    @country NVARCHAR(50),
    @is_military BIT,
    @branch NVARCHAR(100),
    @is_harrier BIT,
    @is_osprey BIT,
    @is_ip BIT,
    @is_commercial BIT,
    @is_121 BIT,
    @flies_for NVARCHAR(100),
    @is_corporate BIT,
    @is_contractor BIT,
    @flies_for_contractor NVARCHAR(100),
    @is_ga BIT,
    @is_faa_cert BIT,
    @winging_date DATE,
    @ifr_date DATE,
    @pic_date DATE,
    @solo_date DATE,
    @ppl_date DATE,
    @commercial_date DATE,
    @atp_date DATE,
    @cfi_date DATE,
    @cfii_date DATE,
    @mei_date DATE,
    @meii_date DATE,
    @registered_date DATE,
    @refferred NVARCHAR(100),
    @logbook_type NVARCHAR(MAX),
    @is_ratp BIT,
    @is_helo BIT,
    @is_navy_log BIT,
    @is_usaf_log BIT,
    @is_civ_log BIT,
    @cost_per_line MONEY,
    @process NVARCHAR(50),
    @POC NVARCHAR(50),
    @navy_pages INT,
    @navy_records INT,
    @ga_pages INT,
    @ga_records INT,
    @ga_large_pages INT,
    @ga_large_records INT,
    @usaf_pages INT,
    @usaf_records INT,
    @sent_date DATETIME,
    @received_date DATETIME,
    @due_date DATETIME,
    @completion_days FLOAT,
    @process_cost MONEY,
    @scans_received_date DATETIME,
    @meta_update DATETIME2(7)
AS
begin 
    insert into dbo.[customers] (id, short_name, expedite, qa, qa_cost, is_sent, is_received, is_delivered, billed, is_paid, 
                                 is_binder_purchased, is_ship_normal, is_ship_overnight, mail_cost, binder_cost, is_binder_sent, cost, profit, 
                                 version, update_date, first_output_date, airline_notes, scan_rep, is_birdeye_sent, full_name, first_name, 
                                 middle_name, last_name, callsign, notes, email, interview_date, interview_airline, phone, Address, 
                                 Address2, City, State, Zip, country, is_military, branch, is_harrier, is_osprey, is_ip, is_commercial, 
                                 is_121, flies_for, is_corporate, is_contractor, flies_for_contractor, is_ga, is_faa_cert, winging_date, ifr_date, 
                                 pic_date, solo_date, ppl_date, commercial_date, atp_date, cfi_date, cfii_date, mei_date, meii_date, register_date, 
                                 referred, logbook_type, is_ratp, is_helo, is_navy_log, is_usaf_log, is_civ_log, cost_per_line, process, POC, navy_pages,
                                 navy_records, ga_pages, ga_records, ga_large_pages, ga_large_records, usaf_pages, usaf_records, sent_date, received_date,
                                 due_date, completion_days, process_cost, scans_received_date, meta_update)
    
    values (@id, @short_name, @expedite, @qa, @qa_cost, @is_sent, @is_recieved, @is_delivered, @billed, @is_paid, 
            @is_binder_purchased, @is_ship_normal, @is_ship_overnight, @mail_cost, @binder_cost, @is_binder_sent, @cost, @profit, 
            @version, @update_date, @first_output_date, @airline_notes, @scan_rep, @is_birdeye_sent, @full_name, @first_name, 
            @middle_name, @last_name, @call_sign, @notes, @email, @interview_date, @interview_airline, @phone, @Address, 
            @Address2, @City, @State, @Zip, @country, @is_military, @branch, @is_harrier, @is_osprey, @is_ip, @is_commercial, 
            @is_121, @flies_for, @is_corporate, @is_contractor, @flies_for_contractor, @is_ga, @is_faa_cert, @winging_date, 
            @ifr_date, @pic_date, @solo_date, @ppl_date, @commercial_date, @atp_date, @cfi_date, @cfii_date, @mei_date,
            @meii_date, @registered_date, @refferred, @logbook_type, @is_ratp, @is_helo, @is_navy_log, @is_usaf_log,
            @is_civ_log, @cost_per_line, @process, @POC, @navy_pages, @navy_records, @ga_pages, @ga_records, @ga_large_pages, 
            @ga_large_records, @usaf_pages, @usaf_records, @sent_date, @received_date, @due_date, @completion_days, @process_cost,
            @scans_received_date, @meta_update);
end
GO
PRINT N'Creating Procedure [dbo].[spCustomers_Update]...';


GO
CREATE PROCEDURE [dbo].[spCustomers_Update]
	@id INT, 
    @short_name NVARCHAR(5), 
    @expedite NVARCHAR(1), 
    @qa NVARCHAR(25), 
    @qa_cost MONEY, 
    @is_sent BIT, 
    @is_recieved BIT, 
    @is_delivered BIT, 
    @billed MONEY, 
    @is_paid BIT, 
    @is_binder_purchased BIT, 
    @is_ship_normal BIT, 
    @is_ship_overnight BIT, 
    @mail_cost MONEY, 
    @binder_cost MONEY, 
    @is_binder_sent BIT, 
    @cost MONEY, 
    @profit MONEY, 
    @version NVARCHAR(20), 
    @update_date DATETIME, 
    @first_output_date DATETIME,
    @airline_notes NVARCHAR(MAX),
    @scan_rep NVARCHAR(25),
    @is_birdeye_sent BIT,
    @full_name NVARCHAR(100),
    @first_name NVARCHAR(25),
    @middle_name NVARCHAR(25),
    @last_name NVARCHAR(25),
    @call_sign NVARCHAR(25),
    @notes NVARCHAR(MAX),
    @email NVARCHAR(100),
    @interview_date DATETIME,
    @interview_airline NVARCHAR(25),
    @phone NVARCHAR(20),
    @Address NVARCHAR(100),
    @Address2 NVARCHAR(100),
    @City NVARCHAR(50),
    @State NVARCHAR(20),
    @Zip NVARCHAR(20),
    @country NVARCHAR(50),
    @is_military BIT,
    @branch NVARCHAR(100),
    @is_harrier BIT,
    @is_osprey BIT,
    @is_ip BIT,
    @is_commercial BIT,
    @is_121 BIT,
    @flies_for NVARCHAR(100),
    @is_corporate BIT,
    @is_contractor BIT,
    @flies_for_contractor NVARCHAR(100),
    @is_ga BIT,
    @is_faa_cert BIT,
    @winging_date DATE,
    @ifr_date DATE,
    @pic_date DATE,
    @solo_date DATE,
    @ppl_date DATE,
    @commercial_date DATE,
    @atp_date DATE,
    @cfi_date DATE,
    @cfii_date DATE,
    @mei_date DATE,
    @meii_date DATE,
    @registered_date DATE,
    @refferred NVARCHAR(100),
    @logbook_type NVARCHAR(MAX),
    @is_ratp BIT,
    @is_helo BIT,
    @is_navy_log BIT,
    @is_usaf_log BIT,
    @is_civ_log BIT,
    @cost_per_line MONEY,
    @process NVARCHAR(50),
    @POC NVARCHAR(50),
    @navy_pages INT,
    @navy_records INT,
    @ga_pages INT,
    @ga_records INT,
    @ga_large_pages INT,
    @ga_large_records INT,
    @usaf_pages INT,
    @usaf_records INT,
    @sent_date DATETIME,
    @received_date DATETIME,
    @due_date DATETIME,
    @completion_days FLOAT,
    @process_cost MONEY,
    @scans_received_date DATETIME,
    @meta_update DATETIME2(7)
AS
begin 
    update dbo.[customers] 
    set short_name = @short_name, expedite = @expedite, qa = @qa, qa_cost = @qa_cost, is_sent = @is_sent, is_received = @is_recieved, 
        is_delivered = @is_delivered, billed = @billed, is_paid = @is_paid, is_binder_purchased = @is_binder_purchased, is_ship_normal = @is_ship_normal, 
        is_ship_overnight = @is_ship_overnight, mail_cost = @mail_cost, binder_cost = @binder_cost, is_binder_sent = @is_binder_sent, cost = @cost, 
        profit = @profit, [version] = @version, update_date = @update_date, first_output_date = @first_output_date, airline_notes = @airline_notes,
        scan_rep = @scan_rep, is_birdeye_sent = @is_birdeye_sent, full_name = @full_name, first_name = @first_name, middle_name = @middle_name,
        last_name = @last_name, callsign = @call_sign, notes = @notes, email = @email, interview_date = @interview_date, interview_airline = @interview_airline,
        phone = @phone, [Address] = @Address, Address2 = @Address2, City = @City, [State] = @State, Zip = @Zip, country = @country, is_military = @is_military,
        branch = @branch, is_harrier = @is_harrier, is_osprey = @is_osprey, is_ip = @is_ip, is_commercial = @is_commercial, is_121 = @is_121, flies_for = @flies_for,
        is_corporate =@is_corporate, is_contractor= @is_contractor , flies_for_contractor = @flies_for_contractor, is_ga = @is_ga,
        is_faa_cert = @is_faa_cert, winging_date = @winging_date, ifr_date = @ifr_date, pic_date = @pic_date, solo_date = @solo_date, ppl_date = @ppl_date,
        commercial_date = @commercial_date, atp_date = @atp_date, cfi_date = @cfi_date, cfii_date = @cfii_date, mei_date = @mei_date, meii_date = @meii_date,
        register_date = @registered_date, referred = @refferred, logbook_type = @logbook_type, is_ratp = @is_ratp, is_helo = @is_helo,
        is_navy_log = @is_navy_log, is_usaf_log = @is_usaf_log, is_civ_log = @is_civ_log, cost_per_line = @cost_per_line, process = @process, POC = @POC,
        navy_pages = @navy_pages, navy_records = @navy_records, ga_pages = @ga_pages, ga_records = @ga_records, ga_large_pages = @ga_large_pages,
        ga_large_records = @ga_large_records, usaf_pages = @usaf_pages, usaf_records = @usaf_records, sent_date = @sent_date, received_date = @received_date,
        due_date = @due_date, completion_days = @completion_days, process_cost = @process_cost, scans_received_date = @scans_received_date, meta_update = @meta_update
    where id = @id;
end
GO
PRINT N'Creating Procedure [dbo].[spInterviews_Get]...';


GO
CREATE PROCEDURE [dbo].[spInterviews_Get]
	@id int,
	@client_id int
AS
begin
	select *
	from dbo.[customers_interviews]
	where id = @id AND client_id = @client_id;
	/* how many interviews will one customer have? */
end
GO
PRINT N'Creating Procedure [dbo].[spInterviews_Insert]...';


GO
CREATE PROCEDURE [dbo].[spInterviews_Insert]
	@id INT, 
    @client_id INT, 
    @interview_date DATE, 
    @interview_airline NVARCHAR(25),
    @meta_update DATETIME2(7)
AS
begin 
    insert into dbo.[customers_interviews] (id, client_id, interview_date, interview_airline, meta_update)
    
    values (@id, @client_id, @interview_date, @interview_airline, @meta_update);
end
GO
PRINT N'Creating Procedure [dbo].[spInterviews_Update]...';


GO
CREATE PROCEDURE [dbo].[spInterviews_Update]
	@id INT, 
    @client_id INT, 
    @interview_date DATE,
    @interview_airline NVARCHAR(25),
    @meta_update DATETIME2(7)
AS
begin 
    update dbo.[customers_interviews] 
    set interview_date = @interview_date, interview_airline = @interview_airline, meta_update = @meta_update
    where id = @id AND client_id = @client_id;
end
GO
PRINT N'Creating Procedure [dbo].[spInvoices_Get]...';


GO
CREATE PROCEDURE [dbo].[spInvoices_Get]
	@id int,
	@client_id int
AS
begin
	select *
	from dbo.[customers_invoices]
	where id = @id AND client_id = @client_id;
	/* how many invoices will one customer have? */
end
GO
PRINT N'Creating Procedure [dbo].[spInvoices_Insert]...';


GO
CREATE PROCEDURE [dbo].[spInvoices_Insert]
	@id INT, 
    @client_id INT, 
    @description NVARCHAR(200), 
    @unit_price MONEY,
    @quantity INT,
    @meta_update DATETIME2(3)
AS
begin 
    insert into dbo.[customers_invoices] (id, client_id, description, unit_price, quantity, meta_update)
    
    values (@id, @client_id, @description, @unit_price, @quantity, @meta_update);
end
GO
PRINT N'Creating Procedure [dbo].[spInvoices_Update]...';


GO
CREATE PROCEDURE [dbo].[spInvoices_Update]
	@id INT, 
    @client_id INT, 
    @description NVARCHAR(200),
    @unit_price MONEY,
    @quantity INT,
    @meta_update DATETIME2(3)
AS
begin 
    update dbo.[customers_invoices] 
    set description = @description, unit_price = @unit_price, quantity = @quantity, meta_update = @meta_update
    where id = @id AND client_id = @client_id;
end
GO
PRINT N'Creating Procedure [dbo].[spIP_Tours_Get]...';


GO
CREATE PROCEDURE [dbo].[spIP_Tours_Get]
	@id int,
	@client_id int,
	@start_date DATETIME
AS
begin
	select *
	from dbo.[customers_ip_tours]
	where id = @id AND client_id = @client_id AND start_date = @start_date;
	
end
GO
PRINT N'Creating Procedure [dbo].[spIP_Tours_Insert]...';


GO
CREATE PROCEDURE [dbo].[spIP_Tours_Insert]
	@id INT, 
    @client_id INT, 
    @ac NVARCHAR(255), 
    @start_date DATETIME,
    @end_date DATETIME,
    @meta_update DATETIME
AS
begin 
    insert into dbo.[customers_ip_tours] (id, client_id, ac, start_date, end_date, meta_update)
    
    values (@id, @client_id, @ac, @start_date, @end_date, @meta_update);
end
GO
PRINT N'Creating Procedure [dbo].[spIP_Tours_Update]...';


GO
CREATE PROCEDURE [dbo].[spIP_Tours_Update]
	@id INT, 
    @client_id INT, 
    @ac NVARCHAR(255),
    @start_date DATETIME, 
    @end_date DATETIME,
    @meta_update DATETIME
AS
begin 
    update dbo.[customers_ip_tours] 
    set ac = @ac, end_date = @end_date, meta_update = @meta_update
    where id = @id AND client_id = @client_id AND start_date = @start_date;
end
GO
PRINT N'Creating Procedure [dbo].[spPages_Get]...';


GO
CREATE PROCEDURE [dbo].[spPages_Get]
	@id int,
	@client_id int,
	@form_type NVARCHAR(255)
AS
begin
	select *
	from dbo.[customers_pages]
	where id = @id AND client_id = @client_id AND form_type = @form_type;
	
end
GO
PRINT N'Creating Procedure [dbo].[spPages_Insert]...';


GO
CREATE PROCEDURE [dbo].[spPages_Insert]
	@id INT, 
    @client_id INT, 
    @form_type NVARCHAR(255), 
    @pages INT,
    @records INT,
    @meta_update DATETIME
AS
begin 
    insert into dbo.[customers_pages] (id, client_id, form_type, pages, records, meta_update)
    
    values (@id, @client_id, @form_type, @pages, @records, @meta_update);
end
GO
PRINT N'Creating Procedure [dbo].[spPages_Update]...';


GO
CREATE PROCEDURE [dbo].[spPages_Update]
	@id INT, 
    @client_id INT, 
    @form_type NVARCHAR(255),
    @pages INT,
    @records INT, 
    @meta_update DATETIME
AS
begin 
    update dbo.[customers_pages] 
    set pages = @pages, records = @records, meta_update = @meta_update
    where id = @id AND client_id = @client_id AND form_type = @form_type;
end
GO
PRINT N'Creating Procedure [dbo].[spSync_Metadata_Get]...';


GO
CREATE PROCEDURE [dbo].[spSync_Metadata_Get]
AS
begin
	select *
	from dbo.[sync_metadata]
	/* retrieves change_version and change_datetime */ 
	/* there will always be one row */
end
GO
PRINT N'Creating Procedure [dbo].[spSync_Metadata_Update]...';


GO
CREATE PROCEDURE [dbo].[spSync_Metadata_Update] 
AS
begin 
    update dbo.[sync_metadata] 
    set change_version = change_version + 1, 
        change_datetime = GETDATE() 
end
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fdabb920-a50b-4466-b1a9-b07b61c2f5f9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fdabb920-a50b-4466-b1a9-b07b61c2f5f9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bf91b58d-af11-499f-a6c3-c0a60eed7c65')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bf91b58d-af11-499f-a6c3-c0a60eed7c65')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '14aecc58-0f01-47bf-a5ee-eba90eff5204')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('14aecc58-0f01-47bf-a5ee-eba90eff5204')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dcc03870-46ca-42e8-8020-237b3a355f32')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dcc03870-46ca-42e8-8020-237b3a355f32')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '91d8653e-42ee-44ee-9d2e-2791a24a3423')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('91d8653e-42ee-44ee-9d2e-2791a24a3423')

GO

GO
/*
  If you dont find any records 
  why 1?
  its a tiny bit faster than select * from dbo.[customers]
  for every row in users return 1 
  this will only run when database is empty 
*/
if not exists (select 1 from dbo.[customers]) 
begin
	insert into dbo.[customers] (id, short_name, expedite, qa, qa_cost, is_sent, is_recieved, is_delivered, billed, is_paid,
								 is_binder_purchased, is_ship_normal, is_ship_overnight, mail_cost, binder_cost, is_binder_sent, cost, profit,
								 version, update_date, first_output_date, airline_notes, scan_rep, is_birdeye_sent, full_name, first_name, 
								 middle_name, last_name, call_sign, notes, email, interview_date, interview_airline, phone, Address, Address2,	
								 City, State, Zip, country, is_military, branch, is_harrier, is_osprey, is_ip, is_commercial, is_121, flies_for,
								 is_corporate, is_contractor, flies_for_contractor, is_ga, is_faa_cert, winging_date, ifr_date, pic_date, solo_date,
								 ppl_date, commercial_date, atp_date, cfi_date, cfii_date, mei_date, meii_date, registered_date, refferred, logbook_type,
								 is_ratp, is_helo, is_navy_log, is_usaf_log, is_civ_log, cost_per_line, process, POC, navy_pages, navy_records, ga_pages,
								 ga_records, ga_large_pages, ga_large_records, usaf_pages, usaf_records, sent_date, received_date, due_date, completion_days,
								 process_cost, scans_received_date, meta_update)
	values (-1, 'AAA_1', NULL, 'StuffS', 59.85, 1, 1, 1, 644.00, 1, 1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'v418', convert(datetime,'2025-05-05 12:45:28.000'), 
			convert(datetime, '2024-11-10 12:03:18.000'), NULL, NULL, NULL, 'NOT James M. Cappabianca', 'James', NULL, 'Cappabianca', 'james.m.cappabianca@icloud.com', NULL,
			NULL, '(619) 987-7143', NULL, NULL, NULL, NULL, NULL, NULL, 1, 'US Marine Corps', NULL, NULL, NULL, 0, NULL, NULL, NULL, 0, NULL, 0, 0, convert(date, '2011-04-08'),
			convert(date, '2010-06-23'), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, convert(date, '2024-10-16'), 'Lab', NULL, NULL, NULL, 0, 0, 0, 0.04, NULL, NULL,
			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, convert(datetime, '2023-02-03 14:43:28.000'), 0, NULL, convert(datetime, '2024-11-09 11:30:42.000'), 
			convert(datetime, '2025-06-23 18:39:23.6615439'));
end 
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
